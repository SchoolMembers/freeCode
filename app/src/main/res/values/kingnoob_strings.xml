<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="king_page1_title">Welcome FreeCode !</string>
    <string name="king_page1_des1">
        FreeCode 앱 설치, 어떤 목표를 위해 하셨나요?
        \n\n\n저희 FreeCode 개발진의 목표는 이렇습니다!
        \n\n&lt;사용자들을 위한 목표 리스트&gt;
    </string>
    <string name="king_page1_des2">* 목표1\n\n* 목표2\n\n* 목표3</string>
    <string name="king_page1_des3">: \n\n: \n\n: </string>
    <string name="king_page1_des4">
        문제 해결 능력 키우기
        \n\n파이썬 학습하기
        \n\n프로그래밍 언어 습득을 통한 컴퓨팅 사고 능력 기르기</string>
    <string name="king_page1_des5">
        개념을 차근차근 이해해가며 함께 학습해요~
        \nFreeCode와 함께라면 누구나 쉽게 따라올 수 있어요!
        \n\n챕터 중간에 퀴즈가 몇 개 포함될 수 있지만, 메뉴의 퀴즈 옵션을 이용한다면 더 많은 퀴즈들을 만나볼 수 있어요!
        \n\n만약, FreeCode 앱을 사용하는 데 어려움을 겪고 있다면, 설정 메뉴의 도움말을 확인해 보세요!
    </string>
    <string name="king_page1_des6">컴퓨팅 사고(computational thinking)란?</string>
    <string name="king_page1_des7">
        사람이나 기계가 복잡한 문제를 해결할 수 있도록 문제를 이해하고, 해결 방법을 찾아내는 기술을 익히는 것
    </string>

    <string name="king_page2_title">기본 개념 이해하기</string>
    <string name="king_page2_des1">프로그래밍이 무엇인지 알고 있나요?</string>
    <string name="king_page2_des2">
        프로그래밍이란, 우리가 원하는 프로그램(앱, 게임 등)을 만들기 위해선 컴퓨터에게 어떤 일을 하라는 지시를 하는 과정이에요.
        \n\n쉽게 말해, 컴퓨터에게 일을 시키기 위한 설계도를 만드는 작업이라고 생각할 수 있어요!
    </string>
    <string name="king_page2_des3">
        \n컴퓨터는 사람의 말을 이해할 수 있을까요?
        \n\n우리가 평소에 사용하는 언어인 자연어(한국어, 영어 등)는 물론이고 10, 20, 30과 같은 10진수 숫자도 알아들을 수 없어요.
        \n\n컴퓨터는 0과 1로 이루어진 기계어(2진수, 00011001)만을 이해할 수 있기 때문에, 사람과 컴퓨터 사이의 번역기 역할을 하는 도구가 필요해요. 그 도구가 바로 프로그래밍 언어랍니다!
        \n\n프로그래밍 언어는 컴퓨터의 언어인 2진수보다 인간이 다루기 훨씬 더 쉬워요.
        \n\n프로그래밍 언어에는 앞으로 배우기 시작할 Python도 포함되고, 그 밖에도 Java, C 등 다양한 언어가 포함되어 있어요!
        \n\nPython은 많은 프로그래밍 언어 중 매우 쉽다고 알려진 언어예요. 접근이 쉬운 Python을 배우며 프로그래밍에 대한 이해도를 높이는 게 목표예요!
    </string>
    <string name="king_page2_image">컴퓨터와 사람 소통</string>
    <string name="king_page2_dialog">
        프로그래밍과 코딩의 차이?
        \n\n코딩이라는 말을 한 번쯤은 들어 봤을 거예요.
        \n\n많은 초보들은 프로그래밍과 코딩을 같다고 생각할 거예요!
        \n\n* 프로그래밍: 프로그램을 작성하는 모든 과정을 포함해요. 즉, 프로그램 설계, 코딩(코드 작성), 에러 수정 등 전체적인 흐름을 다루는 작업이에요.
        \n\n* 코딩: 코드를 작성하는 것만을 의미해요. 쉽게 말해, 사람이 이해할 수 있는 자연어를 컴퓨터가 이해할 수 있는 기계어로 바꾸는 것을 말해요.
        \n\n\n둘을 혼동해서 사용하지 않도록 프로그래밍은 더 큰 범위의 개념이고, 코딩은 그 일부라는 점을 기억하도록 해요!
    </string>

    <string name="king_page3_title">기본 용어 학습하기</string>
    <string name="king_page3_des1">
        ! 코드 (Code)
        \n\n프로그래밍 언어로 작성한 명령문(내용)
        \n\n예시: print("Hello, World!")

        \n\n\n! 소스 코드 (Source Code)
        \n\n사람이 작성한 코드 (위의 예시와 같음)

        \n\n\n! 프로그램 (Program)
        \n\n컴퓨터가 실행할 수 있도록 만들어진 명령어들의 모음
        \n\n예시: 카카오톡, 윈도우, 메신저 어플 등

        \n\n\n! 컴파일러 (Compiler)
        \n\n사람이 작성한 코드를 컴퓨터가 이해할 수 있는 언어(기계어)로 번역해 주는 프로그램이에요. 프로그램을 실행하기 전에 프로그램 전체를 한꺼번에 기계어로 번역해요!
        \n\n예시: C, C++ 등

        \n\n\n! 인터프리터 (Interpreter)
        \n\n프로그램을 실행하는 과정에서 한 명령문씩 읽어서 기계어로 번역해요. 즉, 실시간으로 명령문을 한 줄씩 번역해가며 프로그램이 실행 돼요!
        \n\n예시: Python, JavaScript(Java와 JavaScript는 달라요!) 등

        \n\n\n! 고급 언어 (High-Level Language)
        \n\n사람이 이해하기 쉽도록 만들어진 프로그래밍 언어
        \n\n예시: Python, Java 등

        \n\n\n! 저급 언어 (Low-Level Language)
        \n\n사람이 이해하기는 어렵지만 컴퓨터가 직접 실행할 수 있는 언어
        \n\n예시: 기계어, 어셈블리어 등

        \n\n\n! 변수 (Variable)
        \n\n데이터를 저장하는 상자예요. 변수(상자)의 이름을 정하고, 변수에 값을 저장하거나 수정할 수 있어요.
        \n\n예시: age = 25 (age라는 변수에 값 25를 저장)

        \n\n\n! 함수 (Function)
        \n\n자주 쓰는 코드가 있다면, 함수를 정의하여 해당 코드를 넣고 필요할 때마다 함수를 호출하여 사용할 수 있어요.
        \n아직 이해하기 힘들겠지만 중급 - 2 챕터에서 배우도록 해요!
        \n\n예시:
    </string>
    <string name="king_page3_des2">
        def add(a, b):
        \n\t\tprint(a + b) #두 숫자의 합 출력
        \n\nadd(1, 2) #결과: 3
    </string>
    <string name="king_page3_des3">
        \n\n\n! 데이터 타입 (Data Type)
        \n\n데이터의 종류
        \n\n예시: 정수, 실수, 문자열 등

        \n\n\n! 디버깅 (Debugging)
        \n\n코드에서 발생한 오류를 찾아서 고치는 과정이에요. 즉, 작성한 코드를 실행하여 오류가 생기는 부분은 없는지 체크하는 거예요!

        \n\n\n! 알고리즘 (Algorithm)
        \n\n문제를 해결하기 위한 명령어의 순서예요. 즉, 어떤 순서로 어떻게 코드를 작성할지를 결정하는 거예요.

        \n\n\n\n이렇게 많은 용어들이 존재하지만, 아직 설명하지 않은 용어도 많아요. 함께 차근차근 알아가도록 해요!
    </string>

    <string name="king_page4_title">파이썬 이해하기</string>
    <string name="king_page4_des1">
        파이썬(Python)은 귀도 반 로섬(Guido van rossum)이 개발한 인터프리터 언어예요.
        \n\n파이썬은 쉬운 난이도만큼 컴퓨터 프로그래밍을 교육할 때 많이 사용될 뿐만 아니라 기업에서 실무를 할 때도 많이 사용돼요!
        \n\n\n✅ 장점
        \n\n간결한 문법
        \n자연어와 비슷한 문법으로 초보자도 쉽게 시작할 수 있어요!

        \n\n코드 가독성
        \n직관적인 코드로 작성할 수 있어 읽고 이해하기 쉬워요!

        \n\n플랫폼 독립성
        \n운영체제(윈도우, 맥, 리눅스 등)와 무관하게 동작해요. 즉, 동일한 코드를 여러 운영체제에서 사용할 수 있어요!

        \n\n풍부한 라이브러리
        \n라이브러리가 풍부해 거의 모든 문제를 해결할 수 있어요!
        \n* 라이브러리란?
        \n자주 사용되는 기능 또는 복잡한 알고리즘이 설계되어 있는 데이터의 집합이에요. 자세한 건 고급 단계에서 배우게 돼요!

        \n\n무료 오픈소스
        \n파이썬은 무료로 사용할 수 있어 누구나 쉽게 다운로드하고 설치할 수 있기 때문에, 그만큼 많은 자료들이 존재해요!

        \n\n\n파이썬에게는 이외에도 많은 장점이 존재하며, 초보자와 전문가 모두에게 적합한 훌륭한 언어예요!


        \n\n\n✅ 단점
        \n\n비교적 느린 실행 속도
        \n인터프리터 언어라 코드를 한 줄씩 해석해가며 실행하는 만큼, 컴파일 언어에 비해 느릴 수 있어요.

        \n\n모바일 언어에 비적합
        \n모바일 앱 개발은 주로 Swift, Java 등의 언어를 사용해요.


        \n\n\n✅ 사용성

        \n\n데이터 분석
        \npandas, numpy 등의 라이브러리로 데이터를 처리하는 성능이 매우 뛰어나요!

        \n\n인공지능 및 머신러닝
        \nAI를 개발할 때 가장 많이 사용되는 언어예요! (TensorFlow, PyTorch 등)

        \n\n게임 개발
        \nPygame으로 간단한 게임을 개발하기 좋아요!

        \n\n\n장단점과 사용성의 종류가 매우 많아서 내용에 다 담을 수 없지만, 실무에 적용하다보면 스스로 깨달을 수 있을 거예요 😊
    </string>
</resources>